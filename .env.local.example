# Pokemon TCG Deck Builder - Local Development Environment Variables
# Copy this file to .env.local and fill in your values

# ==========================================
# Database (Required)
# ==========================================
# For local development with Neon PostgreSQL
DATABASE_URL="postgresql://user:password@host/database?sslmode=require"

# ==========================================
# Authentication (Required)
# ==========================================
# Get these from https://clerk.com
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY="pk_test_..."
CLERK_SECRET_KEY="sk_test_..."
NEXT_PUBLIC_CLERK_SIGN_IN_URL="/sign-in"
NEXT_PUBLIC_CLERK_SIGN_UP_URL="/sign-up"
NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL="/dashboard"
NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL="/onboarding"

# ==========================================
# Redis Configuration (Required for Background Jobs)
# ==========================================
# Option 1: Local Redis (recommended for development)
# Start with: docker-compose up -d
REDIS_URL="redis://localhost:6379"

# Option 2: Upstash Redis (for cloud deployment)
# Get from: https://upstash.com
# REDIS_URL="redis://default:YOUR_PASSWORD@YOUR_ENDPOINT.upstash.io:PORT"

# Option 3: Vercel KV (Note: Requires special handling for BullMQ)
# These are auto-injected in Vercel deployments
# KV_URL="https://..."
# KV_REST_API_URL="https://..."
# KV_REST_API_TOKEN="..."

# ==========================================
# Pokemon TCG API (Optional but Recommended)
# ==========================================
# Get your API key from https://pokemontcg.io
# Without key: 1,000 requests/day per IP
# With key: 20,000 requests/day
POKEMON_TCG_API_KEY=""

# ==========================================
# Application Settings
# ==========================================
# Your local development URL
NEXT_PUBLIC_APP_URL="http://localhost:3000"

# Secret for securing cron job endpoints
CRON_SECRET="your-random-secret-here"

# ==========================================
# AI Features (Optional)
# ==========================================
# For AI-powered deck analysis
# Get from: https://platform.openai.com
# OPENAI_API_KEY="sk-..."

# ==========================================
# Payment Processing (Optional)
# ==========================================
# Stripe configuration for premium features
# Get from: https://dashboard.stripe.com
# STRIPE_SECRET_KEY="sk_test_..."
# NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY="pk_test_..."
# STRIPE_WEBHOOK_SECRET="whsec_..."

# Stripe Price IDs (create in Stripe Dashboard)
# STRIPE_BASIC_MONTHLY_PRICE_ID="price_..."
# STRIPE_BASIC_YEARLY_PRICE_ID="price_..."
# STRIPE_PREMIUM_MONTHLY_PRICE_ID="price_..."
# STRIPE_PREMIUM_YEARLY_PRICE_ID="price_..."
# STRIPE_ULTIMATE_MONTHLY_PRICE_ID="price_..."
# STRIPE_ULTIMATE_YEARLY_PRICE_ID="price_..."

# ==========================================
# Development Tools
# ==========================================
# Enable debug logging
# DEBUG="bullmq:*"
# NODE_ENV="development"